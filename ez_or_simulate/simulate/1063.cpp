 #include<stdio.h>
 #include<math.h>

/*

题目要求：
有一些珠子排成一圈，珠子有两种颜色：黑和白。每次操作可以调换中间隔着一个珠子的两珠子的位置，给出这个圈子的初始状态，问最终能否通过操作让圈子中所有同色的珠子排在一起，即黑白分开。


一、珠子总数为偶数，那么奇数位置上的珠子无法移动到偶数位上，偶数位的也无法移动到奇数位上，但在奇数位内部和偶数位内部可以自由移动。任何一个连续区间内奇数位和偶数位的数量差都不超过1。因此想要黑色珠子全都连在一起，则要求奇数位上的黑色珠子数量和偶数位上的黑色珠子数量之差的绝对值要小于等于1。

二、珠子总数为奇数，这种情况一定可以达到目标，因为如果任意相邻两珠子可交换则一定可以达到目标。对于总数为奇数的情况，相当于将一种相邻两珠子可交换的排列方式更改了珠子的排列顺序，但交换方式不变。例如，7个珠子，1357246。把这个序列首尾相接则形成了一个相邻两两可交换的环，可以达到任何目标状态。

*/


 int main()
 {
     int d[30],n,c;
     scanf("%d",&n);
     while(n>0)
     {
         int ow=0,ew=0;
         scanf("%d",&c);
         for(int i=0;i<c;i++)
             scanf("%d",&d[i]);
         if(c%2==1)
             printf("YES\n");
         else
         {
             for(int i=0;i<c;i++)
             {
                 if(d[i]==0)
                 {
                     if(i%2==0)
                         ow++;
                     else
                         ew++;
                 }
             }
             if(abs(ow-ew)<2)
                 printf("YES\n");
             else
                 printf("NO\n");
         }
         n--;
     }
     return 0;
 }
